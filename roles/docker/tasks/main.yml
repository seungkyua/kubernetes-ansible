---
- name: Ensure that APT works with the https method, that CA certificates are installed
  apt: name={{ item }}
  with_items:
    - apt-transport-https
    - ca-certificates

- name: Add the new GPG key
  apt_key: keyserver=hkp://p80.pool.sks-keyservers.net:80 \
           id=58118E89F3A912897C070ADBF76221572C52609D

- name: Add correct /etc/apt/sources.list.d file
  copy:
    src: "docker.{{ ubuntu_release }}.list"
    dest: "/etc/apt/sources.list.d"
    owner: root

- name: Update apt
  apt: update_cache=yes

- name: Install the recommended package. linux-image-extra-$(uname -r)
  apt: name=linux-image-extra-{{ kube_depoloy_uname_r }}
  when: "'kube-deploy' in group_names"
#  when: inventory_hostname in groups.kube-depoloy

- name: Install the recommended package. linux-image-extra-$(uname -r)
  apt: name=linux-image-extra-{{ uname_r }}
  when: "('kube-masters' in group_names) or ('kube-nodes' in group_names)" 

- name: Install Docker
  apt: name=docker-engine

- name: Add the user {{ add_user }} with a group of 'docker'
  user: name={{ add_user }} group=docker

- name: Copy docker config file
  copy:
    src: "docker"
    dest: "/etc/default"
    mode: 0755
    owner: root

- name: Copy docker.service
  copy:
    src: "docker.service"
    dest: "/lib/systemd/system"
    mode: 0644
    owner: root

- name: reload systemd
  shell: systemctl daemon-reload

- name: Start the docker daemon
  service: name=docker state=restarted enabled=yes

- name: export DOCKER_HOST
  lineinfile:
    "dest=/home/{{ add_user }}/.bashrc state=present regexp='^export DOCKER_HOST'
     line='export DOCKER_HOST=127.0.0.1:4243'"
